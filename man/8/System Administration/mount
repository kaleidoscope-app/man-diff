MOUNT(8)                     System Manager's Manual                    MOUNT(8)

NAME
     mount – mount file systems

SYNOPSIS
     mount [-adfruvw] [-t lfs | external_type]
     mount [-dfruvw] special | mount_point
     mount [-dfruvw] [-o options] [-t lfs | external_type] special mount_point

DESCRIPTION
     The mount command calls the mount(2) system call to prepare and graft a
     special device or the remote node (rhost:path) on to the file system tree
     at the point mount_point, which must be a directory.  If either special or
     mount_point are not provided, the appropriate information is obtained via
     the getfsent(3) library routines.

     The system maintains a list of currently mounted file systems.  If no
     arguments are given to mount, this list is printed.

     The options are as follows:

     -a      All the filesystems listed via getfsent(3) are mounted.  Exceptions
             are those marked as ``noauto;'' excluded by the -t flag (see
             below); entries that are neither ``ro,'' ``rw,'' or ``rq;'' ``nfs''
             entries that also have ``net'' as an option; and already-mounted
             ``nfs'' entries.

     -d      Causes everything to be done except for the actual system call.
             This option is useful in conjunction with the -v flag to determine
             what the mount command is trying to do.

     -f      Forces the revocation of write access when trying to downgrade a
             filesystem mount status from read-write to read-only.

     -o      Options are specified with a -o flag followed by a comma separated
             string of options.  The following options are available:

             async   All I/O to the file system should be done asynchronously.
                     This can be somewhat dangerous with respect to losing data
                     when faced with system crashes and power outages.  This is
                     also the default.  It can be avoided with the noasync
                     option.

             force   The same as -f; forces the revocation of write access when
                     trying to downgrade a filesystem mount status from read-
                     write to read-only.

             noasync
                     This filesystem should not force all I/O to be written
                     asynchronously.

             noauto  This filesystem should be skipped when mount is run with
                     the -a flag.

             nodev   Do not interpret character or block special devices on the
                     file system.  This option is useful for a server that has
                     file systems containing special devices for architectures
                     other than its own.

             noexec  Do not allow execution of any binaries on the mounted file
                     system.  This option is useful for a server that has file
                     systems containing binaries for architectures other than
                     its own.

             noowners
                     Ignore the ownership field for the entire volume.  This
                     causes all objects to appear as owned by user ID 99 and
                     group ID 99.  User ID 99 is interpreted as the current
                     effective user ID, while group ID 99 is used directly and
                     translates to ``unknown''.

             nosuid  Do not allow set-user-identifier or set-group-identifier
                     bits to take effect.

             rdonly  The same as -r; mount the file system read-only (even the
                     super-user may not write it).

             sync    All I/O to the file system should be done synchronously.

             update  The same as -u; indicate that the status of an already
                     mounted file system should be changed.

             union   Causes the namespace to appear as the union of directories
                     of the mounted filesystem with corresponding directories in
                     the underlying filesystem.  Lookups will be done in the
                     mounted filesystem first.  If those operations fail due to
                     a non-existent file the underlying directory is then
                     accessed.

             noatime
                     Do not update the file access time when reading from a
                     file.  This option is useful on file systems where there
                     are large numbers of files and performance is more critical
                     than updating the file access time (which is rarely ever
                     important).

             strictatime
                     Always update the file access time when reading from a
                     file. Without this option the filesystem may default to a
                     less strict update mode, where some access time updates are
                     skipped for performance reasons. This option could be
                     ignored if it is not supported by the filesystem.

             nobrowse
                     This option indicates that the mount point should not be
                     visible via the GUI (i.e., appear on the Desktop as a
                     separate volume).

             Any additional options specific to a filesystem type that is not
             one of the internally known types (see the -t option) may be passed
             as a comma separated list; these options are distinguished by a
             leading “-” (dash).  Options that take a value are specified using
             the syntax -option=value.  For example, the mount command:

                   mount -t hfs -o nosuid,-w,-m=755 /dev/disk2s9 /tmp

             causes mount to execute the equivalent of:

                   /sbin/mount_hfs -o nosuid -w -m 755 /dev/disk2s9 /tmp

     -r      Mount the file system read-only (even the super-user may not write
             it).  The same as the “rdonly” argument to the -o option.

     -t lfs | external type
             The argument following the -t is used to indicate the file system
             type.  There is no default local file system for use with mount. A
             type must be specified in order to mount a non-NFS filesystem.  The
             -t option can be used to indicate that the actions should only be
             taken on filesystems of the specified type.  More than one type may
             be specified in a comma separated list.  The list of filesystem
             types can be prefixed with “no” to specify the filesystem types for
             which action should not be taken.  For example, the mount command:

                   mount -a -t nonfs,hfs

             mounts all filesystems except those of type NFS and HFS.

             If the type is not one of the internally known types, mount will
             attempt to execute a program in /sbin/mount_XXX where XXX is
             replaced by the type name.  For example, nfs filesystems are
             mounted by the program /sbin/mount_nfs.

     -u      The -u flag indicates that the status of an already mounted file
             system should be changed.  Any of the options discussed above (the
             -o option) may be changed; also a file system can be changed from
             read-only to read-write or vice versa.  An attempt to change from
             read-write to read-only will fail if any files on the filesystem
             are currently open for writing unless the -f flag is also
             specified.  The set of options is determined by first extracting
             the options for the file system from the filesystem table (see
             getfsent(3)) then applying any options specified by the -o
             argument, and finally applying the -r or -w option.

     -v      Verbose mode.

     -w      Mount the file system read-write.

             The options specific to NFS filesystems are described in the
             mount_nfs(8) manual page.

SEE ALSO
     mount(2), getfsent(3), mount_afp(8), mount_cd9660(8), mount_cddafs(8),
     mount_fdesc(8), mount_hfs(8), mount_apfs(8), mount_msdos(8), mount_nfs(8),
     mount_smbfs(8), mount_udf(8), mount_webdav(8), umount(8)

BUGS
     It is possible for a corrupted file system to cause a crash.

HISTORY
     A mount command appeared in Version 6 AT&T UNIX.

