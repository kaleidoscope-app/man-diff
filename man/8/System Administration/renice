RENICE(8)                    System Manager's Manual                   RENICE(8)

NAME
     renice – alter priority of running processes

SYNOPSIS
     renice priority [[-p] pid ...] [[-g] pgrp ...] [[-u] user ...]
     renice -n increment [[-p] pid ...] [[-g] pgrp ...] [[-u] user ...]

DESCRIPTION
     The renice utility alters the scheduling priority of one or more running
     processes.  The following who parameters are interpreted as process ID's,
     process group ID's, user ID's or user names.  The renice'ing of a process
     group causes all processes in the process group to have their scheduling
     priority altered.  The renice'ing of a user causes all processes owned by
     the user to have their scheduling priority altered.  By default, the
     processes to be affected are specified by their process ID's.

     The following options are available:

     -g      Force who parameters to be interpreted as process group ID's.

     -n      Instead of changing the specified processes to the given priority,
             interpret the following argument as an increment to be applied to
             the current priority of each process.

     -u      Force the who parameters to be interpreted as user names or user
             ID's.

     -p      Reset the who interpretation to be (the default) process ID's.

     For example,

           renice +1 987 -u daemon root -p 32

     would change the priority of process ID's 987 and 32, and all processes
     owned by users daemon and root.

     Users other than the super-user may only alter the priority of processes
     they own, and can only monotonically increase their ``nice value'' within
     the range 0 to PRIO_MAX (20).  (This prevents overriding administrative
     fiats.)  The super-user may alter the priority of any process and set the
     priority to any value in the range PRIO_MIN (-20) to PRIO_MAX.  Useful
     priorities are: 20 (the affected processes will run at the lowest
     priority), 0 (the ``base'' scheduling priority), anything negative (lower
     values cause more favorable scheduling).

FILES
     /etc/passwd  to map user names to user ID's

SEE ALSO
     nice(1), getpriority(2), setpriority(2)

STANDARDS
     The renice utility conforms to IEEE Std 1003.1-2001 (“POSIX.1”).

HISTORY
     The renice utility appeared in 4.0BSD.

BUGS
     Non super-users cannot increase scheduling priorities of their own
     processes, even if they were the ones that decreased the priorities in the
     first place.

