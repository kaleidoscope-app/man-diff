doctools::toc::export::html(n)                               Documentation tools



________________________________________________________________________________

NAME
       doctools::toc::export::html - HTML export plugin

SYNOPSIS
       package require Tcl  8.4

       package require doctools::toc::export::html  ?0.1?

       package require doctools::text

       package require doctools::html

       package require doctools::html::cssdefaults

       export serial configuration

________________________________________________________________________________

DESCRIPTION
       This package implements the doctools table of contents export plugin for
       the generation of HTML markup.

       This is an internal package of doctools, for use by the higher level
       management packages handling tables of contents, especially
       doctools::toc::export, the export manager.

       Using it from a regular interpreter is possible, however only with
       contortions, and is not recommended.  The proper way to use this
       functionality is through the package doctools::toc::export and the export
       manager objects it provides.

API
       The API provided by this package satisfies the specification of the
       doctoc export plugin API version 2.

       export serial configuration
              This command takes the canonical serialization of a table of
              contents, as specified in section ToC serialization format, and
              contained in serial, the configuration, a dictionary, and
              generates HTML markup encoding the table.  The created string is
              then returned as the result of the command.

CONFIGURATION
       The html export plugin recognizes the following configuration variables
       and changes its behaviour as they specify.

       string user
              This standard configuration variable contains the name of the user
              running the process which invoked the export plugin.  The plugin
              puts this information into the provenance comment at the beginning
              of the generated document.

       string file
              This standard configuration variable contains the name of the file
              the table of contents came from. This variable may not be set or
              contain the empty string.  The plugin puts this information, if
              defined, i.e. set and not the empty string, into the provenance
              comment at the beginning of the generated document.

       dictionary map
              This standard configuration variable contains a dictionary mapping
              from the (symbolic) document ids in reference entries to the
              actual filenames and/or urls to be used in the output.

              Document ids without a mapping are used unchanged.

       boolean newlines
              If this flag is set the plugin will break the generated html code
              across lines, with each markup command on a separate line.

              If this flag is not set (the default), the whole document will be
              written on a single line, with minimum spacing between all
              elements.

       boolean indented
              If this flag is set the plugin will indent the markup commands
              according to the structure of indices. To make this work this also
              implies that newlines is set.

              If this flag is not set (the default), the output is formatted as
              per the value of newlines, and no indenting is done.

       string meta
              This variable is meant to hold a fragment of HTML (default:
              empty).  The fragment it contains will be inserted into the
              generated output in the <head> section of the document, just after
              the <title> tag.

       string header
              This variable is meant to hold a fragment of HTML (default:
              empty).  The fragment it contains will be inserted into the
              generated output just after the <h1> title tag in the body of the
              document, in the class.header <div>'ision.

       string footer
              This variable is meant to hold a fragment of HTML (default:
              empty). The fragment it contains will be inserted into the
              generated output just before the </body> tag, in the class.footer
              <div>'ision.

       dictionary rid
              The value of this variable (default: empty) maps references to the
              identifiers to use as their anchor names. Each reference FOO not
              found in the dictionary uses REF-FOO as anchor, i.e. itself
              prefixed with the string REF-.

       string sepline
              The value of this variable is the string to use for the separator
              comments inserted into the output when the outpout is broken
              across lines and/or indented. The default string consists of 60
              dashes.

       string class.main
              This variable contains the class name for the main <div>'ivision
              of the generated document. The default is doctools.

       string class.header
              This variable contains the class name for the header <div>'ision
              of the generated document. The default is toc-header.  This
              division contains the document title, the user specified header,
              if any, and a visible separator line.

       string class.title
              This variable contains the class name for the <h1> tag enclosing
              the document title. The default is toc-title.

       string class.navsep
              This variable contains the class name for the <hr> separators in
              the header and footer sections of the generated document. The
              default is toc-navsep.

       string class.contents
              This variable contains the class name for the XXXXX holding the
              keywords and their references in the generated document. The
              default is toc-contents.

       string class.ref
              This variable contains the class name for the table elements which
              are references to other documents. The default is toc-ref.

       string class.div
              This variable contains the class name for the table elements which
              are divisions. The default is toc-div.

       string class.footer
              This variable contains the class name for the footer <div>'ision
              of the generated document. The default is toc-footer. This
              division contains a browser-visible separator line and the user
              specified footer, if any.

       Note that this plugin ignores the standard configuration variable format,
       and its value.

TOC SERIALIZATION FORMAT
       Here we specify the format used by the doctools v2 packages to serialize
       tables of contents as immutable values for transport, comparison, etc.

       We distinguish between regular and canonical serializations.  While a
       table of contents may have more than one regular serialization only
       exactly one of them will be canonical.

       regular serialization

              [1]    The serialization of any table of contents is a nested Tcl
                     dictionary.

              [2]    This dictionary holds a single key, doctools::toc, and its
                     value. This value holds the contents of the table of
                     contents.

              [3]    The contents of the table of contents are a Tcl dictionary
                     holding the title of the table of contents, a label, and
                     its elements. The relevant keys and their values are

                     title  The value is a string containing the title of the
                            table of contents.

                     label  The value is a string containing a label for the
                            table of contents.

                     items  The value is a Tcl list holding the elements of the
                            table, in the order they are to be shown.

                            Each element is a Tcl list holding the type of the
                            item, and its description, in this order. An
                            alternative description would be that it is a Tcl
                            dictionary holding a single key, the item type,
                            mapped to the item description.

                            The two legal item types and their descriptions are

                            reference
                                   This item describes a single entry in the
                                   table of contents, referencing a single
                                   document.  To this end its value is a Tcl
                                   dictionary containing an id for the
                                   referenced document, a label, and a longer
                                   textual description which can be associated
                                   with the entry.  The relevant keys and their
                                   values are

                                   id     The value is a string containing the
                                          id of the document associated with the
                                          entry.

                                   label  The value is a string containing a
                                          label for this entry. This string also
                                          identifies the entry, and no two
                                          entries (references and divisions) in
                                          the containing list are allowed to
                                          have the same label.

                                   desc   The value is a string containing a
                                          longer description for this entry.

                            division
                                   This item describes a group of entries in the
                                   table of contents, inducing a hierarchy of
                                   entries.  To this end its value is a Tcl
                                   dictionary containing a label for the group,
                                   an optional id to a document for the whole
                                   group, and the list of entries in the group.
                                   The relevant keys and their values are

                                   id     The value is a string containing the
                                          id of the document associated with the
                                          whole group. This key is optional.

                                   label  The value is a string containing a
                                          label for the group. This string also
                                          identifies the entry, and no two
                                          entries (references and divisions) in
                                          the containing list are allowed to
                                          have the same label.

                                   items  The value is a Tcl list holding the
                                          elements of the group, in the order
                                          they are to be shown.  This list has
                                          the same structure as the value for
                                          the keyword items used to describe the
                                          whole table of contents, see above.
                                          This closes the recusrive definition
                                          of the structure, with divisions
                                          holding the same type of elements as
                                          the whole table of contents, including
                                          other divisions.

       canonical serialization
              The canonical serialization of a table of contents has the format
              as specified in the previous item, and then additionally satisfies
              the constraints below, which make it unique among all the possible
              serializations of this table of contents.

              [1]    The keys found in all the nested Tcl dictionaries are
                     sorted in ascending dictionary order, as generated by Tcl's
                     builtin command lsort -increasing -dict.

BUGS, IDEAS, FEEDBACK
       This document, and the package it describes, will undoubtedly contain
       bugs and other problems.  Please report such in the category doctools of
       the Tcllib SF Trackers [http://sourceforge.net/tracker/?group_id=12883].
       Please also report any ideas for enhancements you may have for either
       package and/or documentation.

KEYWORDS
       HTML, doctools, export, serialization, table of contents, toc

CATEGORY
       Text formatter plugin

COPYRIGHT
       Copyright (c) 2009 Andreas Kupries <andreas_kupries@users.sourceforge.net>




