doctools::toc::import::json(n)                               Documentation tools



________________________________________________________________________________

NAME
       doctools::toc::import::json - JSON import plugin

SYNOPSIS
       package require Tcl  8.4

       package require doctools::toc::import::json  ?0.1?

       package require doctools::toc::structure

       package require json

       import string configuration

________________________________________________________________________________

DESCRIPTION
       This package implements the doctools table of contents import plugin for
       the parsing of JSON markup.

       This is an internal package of doctools, for use by the higher level
       management packages handling tables of contents, especially
       doctools::toc::import, the import manager.

       Using it from a regular interpreter is possible, however only with
       contortions, and is not recommended.  The proper way to use this
       functionality is through the package doctools::toc::import and the import
       manager objects it provides.

API
       The API provided by this package satisfies the specification of the
       doctoc import plugin API version 2.

       import string configuration
              This command takes the string and parses it as JSON markup
              encoding a table of contents, in the context of the specified
              configuration (a dictionary). The result of the command is the
              canonical serialization of that table of contents, in the form
              specified in section ToC serialization format.

JSON NOTATION OF TABLES OF CONTENTS
       The JSON format used for tables of contents is a direct translation of
       the ToC serialization format, mapping Tcl dictionaries as JSON objects
       and Tcl lists as JSON arrays.  For example, the Tcl serialization

       doctools::toc {
           items {
               {reference {
                desc {DocTools - Tables of Contents}
                 id introduction.man
                 label doctools::toc::introduction
            }}
            {division {
                 id processing.man
                 items {
                     {reference {
                      desc {doctoc serialization utilities}
                      id structure.man
                      label doctools::toc::structure
                  }}
                  {reference {
                      desc {Parsing text in doctoc format}
                      id parse.man
                      label doctools::toc::parse
                  }}
                 }
                    label Processing
               }}
           }
           label {Table of Contents}
           title TOC
       }

       is equivalent to the JSON string

       {
           "doctools::toc" : {
               "items" : [{
                   "reference" : {
                       "desc"  : "DocTools - Tables of Contents",
                       "id"    : "introduction.man",
                       "label" : "doctools::toc::introduction"
                   }
               },{
                   "division" : {
                       "id"    : "processing.man",
                       "items" : [{
                           "reference" : {
                               "desc"  : "doctoc serialization utilities",
                               "id"    : "structure.man",
                               "label" : "doctools::toc::structure"
                           }
                       },{
                           "reference" : {
                               "desc"  : "Parsing text in doctoc format",
                               "id"    : "parse.man",
                               "label" : "doctools::toc::parse"
                           }
                       }],
                       "label" : "Processing"
                   }
               }],
               "label" : "Table of Contents",
               "title" : "TOC"
           }
       }


TOC SERIALIZATION FORMAT
       Here we specify the format used by the doctools v2 packages to serialize
       tables of contents as immutable values for transport, comparison, etc.

       We distinguish between regular and canonical serializations.  While a
       table of contents may have more than one regular serialization only
       exactly one of them will be canonical.

       regular serialization

              [1]    The serialization of any table of contents is a nested Tcl
                     dictionary.

              [2]    This dictionary holds a single key, doctools::toc, and its
                     value. This value holds the contents of the table of
                     contents.

              [3]    The contents of the table of contents are a Tcl dictionary
                     holding the title of the table of contents, a label, and
                     its elements. The relevant keys and their values are

                     title  The value is a string containing the title of the
                            table of contents.

                     label  The value is a string containing a label for the
                            table of contents.

                     items  The value is a Tcl list holding the elements of the
                            table, in the order they are to be shown.

                            Each element is a Tcl list holding the type of the
                            item, and its description, in this order. An
                            alternative description would be that it is a Tcl
                            dictionary holding a single key, the item type,
                            mapped to the item description.

                            The two legal item types and their descriptions are

                            reference
                                   This item describes a single entry in the
                                   table of contents, referencing a single
                                   document.  To this end its value is a Tcl
                                   dictionary containing an id for the
                                   referenced document, a label, and a longer
                                   textual description which can be associated
                                   with the entry.  The relevant keys and their
                                   values are

                                   id     The value is a string containing the
                                          id of the document associated with the
                                          entry.

                                   label  The value is a string containing a
                                          label for this entry. This string also
                                          identifies the entry, and no two
                                          entries (references and divisions) in
                                          the containing list are allowed to
                                          have the same label.

                                   desc   The value is a string containing a
                                          longer description for this entry.

                            division
                                   This item describes a group of entries in the
                                   table of contents, inducing a hierarchy of
                                   entries.  To this end its value is a Tcl
                                   dictionary containing a label for the group,
                                   an optional id to a document for the whole
                                   group, and the list of entries in the group.
                                   The relevant keys and their values are

                                   id     The value is a string containing the
                                          id of the document associated with the
                                          whole group. This key is optional.

                                   label  The value is a string containing a
                                          label for the group. This string also
                                          identifies the entry, and no two
                                          entries (references and divisions) in
                                          the containing list are allowed to
                                          have the same label.

                                   items  The value is a Tcl list holding the
                                          elements of the group, in the order
                                          they are to be shown.  This list has
                                          the same structure as the value for
                                          the keyword items used to describe the
                                          whole table of contents, see above.
                                          This closes the recusrive definition
                                          of the structure, with divisions
                                          holding the same type of elements as
                                          the whole table of contents, including
                                          other divisions.

       canonical serialization
              The canonical serialization of a table of contents has the format
              as specified in the previous item, and then additionally satisfies
              the constraints below, which make it unique among all the possible
              serializations of this table of contents.

              [1]    The keys found in all the nested Tcl dictionaries are
                     sorted in ascending dictionary order, as generated by Tcl's
                     builtin command lsort -increasing -dict.

BUGS, IDEAS, FEEDBACK
       This document, and the package it describes, will undoubtedly contain
       bugs and other problems.  Please report such in the category doctools of
       the Tcllib SF Trackers [http://sourceforge.net/tracker/?group_id=12883].
       Please also report any ideas for enhancements you may have for either
       package and/or documentation.

KEYWORDS
       JSON, deserialization, doctools, import, table of contents, toc

CATEGORY
       Text formatter plugin

COPYRIGHT
       Copyright (c) 2009 Andreas Kupries <andreas_kupries@users.sourceforge.net>




