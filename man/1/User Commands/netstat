NETSTAT(1)                   General Commands Manual                  NETSTAT(1)

NAME
     netstat – show network status

SYNOPSIS
     netstat [-AaLlnW] [-f address_family | -p protocol]
     netstat [-gilns] [-v] [-f address_family] [-I interface]
     netstat -i | -I interface [-w wait] [-c queue] [-abdgqRtS]
     netstat -s [-s] [-f address_family | -p protocol] [-w wait]
     netstat -i | -I interface -s [-f address_family | -p protocol]
     netstat -m [-m]
     netstat -r [-Aaln] [-f address_family]
     netstat -rs [-s]
     netstat -B [-I interface]

DESCRIPTION
     The netstat command symbolically displays the contents of various network-
     related data structures.  There are a number of output formats, depending
     on the options for the information presented.  The first form of the
     command displays a list of active sockets for each protocol.  The second
     form presents the contents of one of the other network data structures
     according to the option selected. Using the third form, with a wait
     interval specified, netstat will continuously display the information
     regarding packet traffic on the configured network interfaces.  The fourth
     form displays statistics for the specified protocol or address family. If a
     wait interval is specified, the protocol information over the last interval
     seconds will be displayed.  The fifth form displays per-interface
     statistics for the specified protocol or address family.  The sixth form
     displays mbuf(9) statistics.  The seventh form displays routing table for
     the specified address family.  The eighth form displays routing statistics.

     The options have the following meaning:

     -A    With the default display, show the address of any protocol control
           blocks associated with sockets and the flow hash; used for debugging.

     -a    With the default display, show the state of all sockets; normally
           sockets used by server processes are not shown. With the routing
           table display (option -r, as described below), show protocol-cloned
           routes (routes generated by a RTF_PRCLONING parent route); normally
           these routes are not shown.

     -B    Show statistics about bpf(4) devices.  This includes information like
           how many packets have been matched, dropped and received by the bpf
           device, also information about current buffer sizes and device
           states. The option -I show information only for the bpf devices bound
           the specified interface.

     -b    With the interface display (option -i, as described below), show the
           number of bytes in and out.

     -c queue
           With the queue statistics (option -q, as described below), show only
           those for the specified queue.

     -d    With either interface display (option -i or an interval, as described
           below), show the number of dropped packets.

     -f address_family
           Limit statistics or address control block reports to those of the
           specified address family.  The following address families are
           recognized: inet, for AF_INET, inet6, for AF_INET6, unix, for AF_UNIX
           and vsock, for AF_VSOCK.

     -g    Show information related to multicast (group address) membership.  If
           the -s option is also present, show extended interface group
           management statistics.  If the -v option is specified, show link-
           layer memberships; they are suppressed by default.  Source lists for
           each group will also be printed.  Specifying -v twice will print the
           control plane timers for each interface and the source list counters
           for each group.  If the -i is specified, only that interface will be
           shown.  If the -f is specified, only information for the address
           family will be displayed.

     -I interface
           Show information about the specified interface; used with a wait
           interval as described below.  If the -s option is present, show per-
           interface protocol statistics on the interface for the specified
           address_family or protocol, or for all protocol families.

     -i    Show the state of interfaces which have been auto-configured
           (interfaces statically configured into a system, but not located at
           boot time are not shown).  If the -a options is also present,
           multicast addresses currently in use are shown for each Ethernet
           interface and for each IP interface address.  Multicast addresses are
           shown on separate lines following the interface address with which
           they are associated.  If the -s option is present, show per-interface
           statistics on all interfaces for the specified address_family or
           protocol, or for all protocol families.

     -L    Show the size of the various listen queues.  The first count shows
           the number of unaccepted connections.  The second count shows the
           amount of unaccepted incomplete connections.  The third count is the
           maximum number of queued connections.

     -l    Print full IPv6 address.

     -m    Show statistics recorded by the memory management routines (the
           network stack manages a private pool of memory buffers). More
           detailed information about the buffers, which includes their cache
           related statistics, can be obtained by using -mm or -m -m option.

     -n    Show network addresses as numbers (normally netstat interprets
           addresses and attempts to display them symbolically).  This option
           may be used with any of the display formats.

     -p protocol
           Show statistics about protocol, which is either a well-known name for
           a protocol or an alias for it.  Some protocol names and aliases are
           listed in the file /etc/protocols.  The special protocol name “bdg”
           is used to show bridging statistics.  A null response typically means
           that there are no interesting numbers to report.  The program will
           complain if protocol is unknown or if there is no statistics routine
           for it.

     -q    Show network interface send queue statistics.  By default all queues
           are displayed, unless specified with -c.  This option requires
           specifying an interface with -I option.  More detailed information
           about the queues, which includes their queueing algorithm related
           statistics, can be obtained by using -qq or -q -q option.

     -r    Show the routing tables.  Use with -a to show protocol-cloned routes.
           When -s is also present, show routing statistics instead.  When -l is
           also present, netstat assumes more columns are there and the maximum
           transmission unit.  More detailed information about the route metrics
           are displayed with -ll for TCP round trip times -lll for all metrics.
           Use the -z flags to display only entries with non-zero RTT values.
           (“mtu”) are also displayed.

     -R    Show reachability information.  Use with -i to show link-layer
           reachability information for a given interface.

     -s    Show per-protocol statistics.  If this option is repeated, counters
           with a value of zero are suppressed.  For security reasons, root
           privileges are required to read TCP statistics and in the absence of
           such privileges all TCP counters will be reported as zero.

     -S    Show interface link status and interface state information about the
           specified interface.  This option requires specifying an interface
           with -I option.

     -v    Increase verbosity level.

     -W    In certain displays, avoid truncating addresses even if this causes
           some fields to overflow.

     -w wait
           Show network interface or protocol statistics at intervals of wait
           seconds.

     -x    Show extended link-layer reachability information in addition to that
           shown by the -R flag.

OUTPUT
     The default display, for active sockets, shows the local and remote
     addresses, send and receive queue sizes (in bytes), protocol, and the
     internal state of the protocol.  Address formats are of the form
     “host.port” or “network.port” if a socket's address specifies a network but
     no specific host address.  If known, the host and network addresses are
     displayed symbolically according to the databases /etc/hosts and
     /etc/networks, respectively.  If a symbolic name for an address is unknown,
     or if the -n option is specified, the address is printed numerically,
     according to the address family.  For more information regarding the
     Internet “dot format”, refer to inet(3)).  Unspecified, or “wildcard”,
     addresses and ports appear as “*”.

     Internet domain socket states:

     CLOSED: The socket is not in use.

     LISTEN:  The socket is listening for incoming connections.  Unconnected
     listening sockets like these are only displayed when using the -a option.

     SYN_SENT:  The socket is actively trying to establish a connection to a
     remote peer.

     SYN_RCVD:  The socket has passively received a connection request from a
     remote peer.

     ESTABLISHED:  The socket has an established connection between a local
     application and a remote peer.

     CLOSE_WAIT:  The socket connection has been closed by the remote peer, and
     the system is waiting for the local application to close its half of the
     connection.

     LAST_ACK:  The socket connection has been closed by the remote peer, the
     local application has closed its half of the connection, and the system is
     waiting for the remote peer to acknowledge the close.

     FIN_WAIT_1:  The socket connection has been closed by the local
     application, the remote peer has not yet acknowledged the close, and the
     system is waiting for it to close its half of the connection.

     FIN_WAIT_2:  The socket connection has been closed by the local
     application, the remote peer has acknowledged the close, and the system is
     waiting for it to close its half of the connection.

     CLOSING:  The socket connection has been closed by the local application
     and the remote peer simultaneously, and the remote peer has not yet
     acknowledged the close attempt of the local application.

     TIME_WAIT:  The socket connection has been closed by the local application,
     the remote peer has closed its half of the connection, and the system is
     waiting to be sure that the remote peer received the last acknowledgement.

     The interface display provides a table of cumulative statistics regarding
     packets transferred, errors, and collisions.  The network addresses of the
     interface and the maximum transmission unit (“mtu”) are also displayed.

     The routing table display indicates the available routes and their status.
     Each route consists of a destination host or network and a gateway to use
     in forwarding packets.  The flags field shows a collection of information
     about the route stored as binary choices.  The individual flags are
     discussed in more detail in the route(8) and route(4) manual pages.  The
     mapping between letters and flags is:

     1       RTF_PROTO1       Protocol specific routing flag #1
     2       RTF_PROTO2       Protocol specific routing flag #2
     3       RTF_PROTO3       Protocol specific routing flag #3
     B       RTF_BLACKHOLE    Just discard packets (during updates)
     b       RTF_BROADCAST    The route represents a broadcast address
     C       RTF_CLONING      Generate new routes on use
     c       RTF_PRCLONING    Protocol-specified generate new routes on use
     D       RTF_DYNAMIC      Created dynamically (by redirect)
     G       RTF_GATEWAY      Destination requires forwarding by intermediary
     H       RTF_HOST         Host entry (net otherwise)
     I       RTF_IFSCOPE      Route is associated with an interface scope
     i       RTF_IFREF        Route is holding a reference to the interface
     L       RTF_LLINFO       Valid protocol to link address translation
     M       RTF_MODIFIED     Modified dynamically (by redirect)
     m       RTF_MULTICAST    The route represents a multicast address
     R       RTF_REJECT       Host or net unreachable
     r       RTF_ROUTER       Host is a default router
     S       RTF_STATIC       Manually added
     U       RTF_UP           Route usable
     W       RTF_WASCLONED    Route was generated as a result of cloning
     X       RTF_XRESOLVE     External daemon translates proto to link address
     Y       RTF_PROXY        Proxying; cloned routes will not be scoped
     g       RTF_GLOBAL       Route to a destination of the global internet
                              (policy hint)

     Direct routes are created for each interface attached to the local host;
     the gateway field for such entries shows the address of the outgoing
     interface.  The refcnt field gives the current number of active uses of the
     route.  Connection oriented protocols normally hold on to a single route
     for the duration of a connection while connectionless protocols obtain a
     route while sending to the same destination.  The use field provides a
     count of the number of packets sent using that route.  The interface entry
     indicates the network interface utilized for the route.  A route which is
     marked with the RTF_IFSCOPE flag is instantiated for the corresponding
     interface.  A cloning route which is marked with the RTF_PROXY flag will
     not generate new routes that are associated with its interface scope.

     When netstat is invoked with the -w option and a wait interval argument, it
     displays a running count of statistics related to network interfaces or
     protocols.  An obsolete version of this option used a numeric parameter
     with no option, and is currently supported for backward compatibility.  By
     default, this display summarizes information for all interfaces.
     Information for a specific interface may be displayed with the -I option.

SEE ALSO
     nfsstat(1), ps(1), inet(4), unix(4), hosts(5), networks(5), protocols(5),
     route(8), services(5), iostat(8), bpf(4),

HISTORY
     The netstat command appeared in 4.2BSD.

     IPv6 support was added by WIDE/KAME project.

BUGS
     The notion of errors is ill-defined.

