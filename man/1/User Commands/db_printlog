db_printlog(1)               General Commands Manual              db_printlog(1)

NAME
     db_printlog

SYNOPSIS
     db_printlog [-NrV] [-h home] [-P password]

DESCRIPTION
     The db_printlog utility is a debugging utility that dumps Berkeley DB log
     files in a human-readable format.

     The options are as follows:

     -h
       Specify a home directory for the database environment; by default, the
       current working directory is used.

     -N
       Do not acquire shared region mutexes while running. Other problems, such
       as potentially fatal errors in Berkeley DB, will be ignored as well. This
       option is intended only for debugging errors, and should not be used
       under any other circumstances.

     -P
       Specify an environment password. Although Berkeley DB utilities overwrite
       password strings as soon as possible, be aware there may be a window of
       vulnerability on systems where unprivileged users can see command-line
       arguments or where utilities are not able to overwrite the memory
       containing the command-line arguments.

     -r
       Read the log files in reverse order.

     -V
       Write the library version number to the standard output, and exit.

     For more information on the db_printlog output and using it to debug
     applications, see Reviewing Berkeley DB log files.

     The db_printlog utility uses a Berkeley DB environment (as described for
     the -h option, the environment variable DB_HOME, or because the utility was
     run in a directory containing a Berkeley DB environment). In order to avoid
     environment corruption when using a Berkeley DB environment, db_printlog
     should always be given the chance to detach from the environment and exit
     gracefully. To cause db_printlog to release all environment resources and
     exit cleanly, send it an interrupt signal (SIGINT).

     The db_printlog utility exits 0 on success, and >0 if an error occurs.

ENVIRONMENT
     DB_HOME  If the -h option is not specified and the environment variable
              DB_HOME is set, it is used as the path of the database home, as
              described in DB_ENV->open.

SEE ALSO
     db_archive(1), db_checkpoint(1), db_deadlock(1), db_dump(1), db_load(1),
     db_recover(1), db_stat(1), db_upgrade(1), db_verify(1)

