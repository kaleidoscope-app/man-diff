PTARGREP(1)             Perl Programmers Reference Guide             PTARGREP(1)




NAME
       ptargrep - Apply pattern matching to the contents of files in a tar
       archive

SYNOPSIS
         ptargrep [options] <pattern> <tar file> ...

         Options:

          --basename|-b     ignore directory paths from archive
          --ignore-case|-i  do case-insensitive pattern matching
          --list-only|-l    list matching filenames rather than extracting matches
          --verbose|-v      write debugging message to STDERR
          --help|-?         detailed help message

DESCRIPTION
       This utility allows you to apply pattern matching to the contents of
       files contained in a tar archive.  You might use this to identify all
       files in an archive which contain lines matching the specified pattern
       and either print out the pathnames or extract the files.

       The pattern will be used as a Perl regular expression (as opposed to a
       simple grep regex).

       Multiple tar archive filenames can be specified - they will each be
       processed in turn.

OPTIONS
       --basename (alias -b)
           When matching files are extracted, ignore the directory path from the
           archive and write to the current directory using the basename of the
           file from the archive.  Beware: if two matching files in the archive
           have the same basename, the second file extracted will overwrite the
           first.

       --ignore-case (alias -i)
           Make pattern matching case-insensitive.

       --list-only (alias -l)
           Print the pathname of each matching file from the archive to STDOUT.
           Without this option, the default behaviour is to extract each
           matching file.

       --verbose (alias -v)
           Log debugging info to STDERR.

       --help (alias -?)
           Display this documentation.

COPYRIGHT
       Copyright 2010 Grant McLean <grantm@cpan.org>

       This program is free software; you can redistribute it and/or modify it
       under the same terms as Perl itself.



