PERLDELTA(1)            Perl Programmers Reference Guide            PERLDELTA(1)




NAME
       perldelta - what is new for perl v5.34.0

DESCRIPTION
       This document describes differences between the 5.32.0 release and the
       5.34.0 release.

       If you are upgrading from an earlier release such as 5.30.0, first read
       perl5320delta, which describes differences between 5.30.0 and 5.32.0.

Core Enhancements
   Experimental Try/Catch Syntax
       An initial experimental attempt at providing "try"/"catch" notation has
       been added.

           use feature 'try';

           try {
               a_function();
           }
           catch ($e) {
               warn "An error occurred: $e";
           }

       For more information, see "Try Catch Exception Handling" in perlsyn.

   "qr/{,n}/" is now accepted
       An empty lower bound is now accepted for regular expression quantifiers,
       like "{,3}".

   Blanks freely allowed within but adjacent to curly braces
       (in double-quotish contexts and regular expression patterns)

       This means you can write things like "\x{ FFFC }" if you like.  This
       applies to all such constructs, namely "\b{}", "\g{}", "\k{}", "\N{}",
       "\o{}", and "\x{}"; as well as the regular expression quantifier "{m,n}".
       "\p{}" and "\P{}" retain their already-existing, even looser, rules
       mandated by the Unicode standard (see "Properties accessible through \p{}
       and \P{}" in perluniprops).

       This ability is in effect regardless of the presence of the "/x" regular
       expression pattern modifier.

       Additionally, the comma in a regular expression braced quantifier may
       have blanks (tabs or spaces) before and/or after the comma, like
       "qr/a{ 5, 7 }/".

   New octal syntax "0oddddd"
       It is now possible to specify octal literals with "0o" prefixes, as in
       "0o123_456", parallel to the existing construct to specify hexadecimal
       literal "0xddddd" and binary literal "0bddddd".  Also, the builtin
       "oct()" function now accepts this new syntax.

       See "Scalar value constructors" in perldata and "oct EXPR" in perlfunc.

Performance Enhancements
       •   Fix a memory leak in RegEx [GH #18604
           <https://github.com/Perl/perl5/issues/18604>]

Modules and Pragmata
   New Modules and Pragmata
       •   ExtUtils::PL2Bat 0.004 has been added to the Perl core.

           This module is a generalization of the "pl2bat" script. It being a
           script has led to at least two forks of this code; this module will
           unify them under one implementation with tests.

   Updated Modules and Pragmata
       •   Archive::Tar has been upgraded from version 2.36 to 2.38.

       •   autodie has been upgraded from version 2.32 to 2.34.

       •   B has been upgraded from version 1.80 to 1.82.

       •   B::Deparse has been upgraded from version 1.54 to 1.56.

       •   bytes has been upgraded from version 1.07 to 1.08.

       •   Carp has been upgraded from version 1.50 to 1.52.

       •   Compress::Raw::Bzip2 has been upgraded from version 2.093 to 2.101.

       •   Compress::Raw::Zlib has been upgraded from version 2.093 to 2.101.

       •   Config::Perl::V has been upgraded from version 0.32 to 0.33.

       •   CPAN has been upgraded from version 2.27 to 2.28.

       •   Data::Dumper has been upgraded from version 2.174 to 2.179.

       •   DB has been upgraded from version 1.58 to 1.59.

       •   DB_File has been upgraded from version 1.853 to 1.855.

       •   Devel::Peek has been upgraded from version 1.28 to 1.30.

       •   Devel::PPPort has been upgraded from version 3.57 to 3.62.

           New "PERL_VERSION_*" comparison macros are now available.

           "ppport.h --api-info" no longer includes non-API info unless that is
           the only match

       •   Digest has been upgraded from version 1.17_01 to 1.19.

       •   Digest::MD5 has been upgraded from version 2.55_01 to 2.58.

       •   DynaLoader has been upgraded from version 1.47 to 1.50.

       •   Encode has been upgraded from version 3.06 to 3.08.

       •   Env has been upgraded from version 1.04 to 1.05.

       •   Errno has been upgraded from version 1.30 to 1.33.

       •   experimental has been upgraded from version 0.020 to 0.024.

       •   Exporter has been upgraded from version 5.74 to 5.76.

       •   ExtUtils::CBuilder has been upgraded from version 0.280234 to
           0.280236.

       •   ExtUtils::Install has been upgraded from version 2.14 to 2.20.

       •   ExtUtils::MakeMaker has been upgraded from version 7.44 to 7.62.

       •   ExtUtils::Manifest has been upgraded from version 1.72 to 1.73.

       •   ExtUtils::Miniperl has been upgraded from version 1.09 to 1.10.

       •   ExtUtils::ParseXS has been upgraded from version 3.40 to 3.43.

       •   ExtUtils::Typemaps has been upgraded from version 3.38 to 3.43.

       •   Fcntl has been upgraded from version 1.13 to 1.14.

       •   feature has been upgraded from version 1.58 to 1.64.

           Added the default enabled "bareword_filehandles" feature.

           A new multidimensional feature has been added, which is enabled by
           default but allows turning off multi-dimensional array emulation.

       •   File::Copy has been upgraded from version 2.34 to 2.35.

       •   File::Fetch has been upgraded from version 0.56 to 1.00.

       •   File::Find has been upgraded from version 1.37 to 1.39.

       •   File::Path has been upgraded from version 2.16 to 2.18.

       •   File::Spec has been upgraded from version 3.78 to 3.80.

       •   File::Temp has been upgraded from version 0.2309 to 0.2311.

       •   Filter::Util::Call has been upgraded from version 1.59 to 1.60.

       •   FindBin has been upgraded from version 1.51 to 1.52.

       •   GDBM_File has been upgraded from version 1.18 to 1.19.

           New functions and compatibility for newer versions of GDBM. [GH
           #18435 <https://github.com/Perl/perl5/pull/18435>]

       •   Getopt::Long has been upgraded from version 2.51 to 2.52.

       •   Getopt::Std has been upgraded from version 1.12 to 1.13.

       •   Hash::Util has been upgraded from version 0.23 to 0.25.

       •   Hash::Util::FieldHash has been upgraded from version 1.20 to 1.21.

       •   I18N::LangTags has been upgraded from version 0.44 to 0.45.

       •   if has been upgraded from version 0.0608 to 0.0609.

       •   IO has been upgraded from version 1.43 to 1.46.

           IO::Socket now stores error messages in $IO::Socket::errstr, in
           addition to in $@.

           The "error" method now reports the error state for both the input and
           output streams for sockets and character devices.  Similarly
           "clearerr" now clears the error state for both streams.

           A spurious error reported for regular file handles has been fixed in
           IO::Handle.  [GH #18019 <https://github.com/Perl/perl5/issues/18019>]

       •   IO-Compress has been upgraded from version 2.093 to 2.102.

           bin/zipdetails version 2.02

       •   IO::Socket::IP has been upgraded from version 0.39 to 0.41.

       •   IO::Zlib has been upgraded from version 1.10 to 1.11.

       •   IPC::SysV has been upgraded from version 2.07 to 2.09.

       •   JSON::PP has been upgraded from version 4.04 to 4.06.

       •   The libnet distribution has been upgraded from version 3.11 to 3.13.

       •   locale has been upgraded from version 1.09 to 1.10.

       •   Math::Complex has been upgraded from version 1.5901 to 1.5902.

       •   MIME::Base64 has been upgraded from version 3.15 to 3.16.

       •   Module::CoreList has been upgraded from version 5.20200620 to
           5.20210520.

       •   Module::Load has been upgraded from version 0.34 to 0.36.

       •   Module::Load::Conditional has been upgraded from version 0.70 to
           0.74.

       •   mro has been upgraded from version 1.23 to 1.25_001.

       •   Net::Ping has been upgraded from version 2.72 to 2.74.

       •   NEXT has been upgraded from version 0.67_01 to 0.68.

       •   ODBM_File has been upgraded from version 1.16 to 1.17.

       •   Opcode has been upgraded from version 1.47 to 1.50.

       •   overload has been upgraded from version 1.31 to 1.33.

       •   perlfaq has been upgraded from version 5.20200523 to 5.20210411.

       •   PerlIO::encoding has been upgraded from version 0.28 to 0.30.

       •   PerlIO::mmap has been upgraded from version 0.016 to 0.017.

       •   PerlIO::scalar has been upgraded from version 0.30 to 0.31.

       •   PerlIO::via::QuotedPrint has been upgraded from version 0.08 to 0.09.

       •   Pod::Checker has been upgraded from version 1.73 to 1.74.

       •   Pod::Html has been upgraded from version 1.25 to 1.27.

       •   Pod::Simple has been upgraded from version 3.40 to 3.42.

       •   Pod::Usage has been upgraded from version 1.69 to 2.01.

       •   POSIX has been upgraded from version 1.94 to 1.97.

           POSIX::signbit() behaviour has been improved.  [GH #18441
           <https://github.com/Perl/perl5/pull/18441>]

           Documentation for "asctime" clarifies that the result is always in
           English.  (Use "strftime" for a localized result.)

       •   re has been upgraded from version 0.40 to 0.41.

           (See under "Internal Changes" for more information.)

       •   Safe has been upgraded from version 2.41 to 2.43.

       •   Socket has been upgraded from version 2.029 to 2.031.

       •   Storable has been upgraded from version 3.21 to 3.23.

       •   strict has been upgraded from version 1.11 to 1.12.

       •   subs has been upgraded from version 1.03 to 1.04.

       •   Symbol has been upgraded from version 1.08 to 1.09.

       •   Test::Harness has been upgraded from version 3.42 to 3.43.

       •   Test::Simple has been upgraded from version 1.302175 to 1.302183.

       •   Text::Balanced has been upgraded from version 2.03 to 2.04.

       •   threads has been upgraded from version 2.25 to 2.26.

       •   threads::shared has been upgraded from version 1.61 to 1.62.

       •   Tie::RefHash has been upgraded from version 1.39 to 1.40.

       •   Time::HiRes has been upgraded from version 1.9764 to 1.9767.

       •   Time::Local has been upgraded from version 1.28 to 1.30.

       •   Unicode::Collate has been upgraded from version 1.27 to 1.29.

       •   Unicode::Normalize has been upgraded from version 1.27 to 1.28.

       •   utf8 has been upgraded from version 1.22 to 1.24.

       •   version has been upgraded from version 0.9924 to 0.9928.

       •   warnings has been upgraded from version 1.47 to 1.51.

       •   Win32 has been upgraded from version 0.53 to 0.57.

           Fix calling convention for "PFNRegGetValueA".

           Added "Win32::IsSymlinkCreationAllowed()",
           "Win32::IsDeveloperModeEnabled()", and
           "Win32::GetProcessPrivileges()".

           Removed old code for versions before Windows 2000.

       •   XS::APItest has been upgraded from version 1.09 to 1.16.

       •   XS::Typemap has been upgraded from version 0.17 to 0.18.

Documentation
   New Documentation
       perldocstyle

       This document is a guide for the authorship and maintenance of the
       documentation that ships with Perl.

       perlgov

       This document describes the goals, scope, system, and rules for Perl's
       new governance model.

       Other pod files, most notably perlpolicy, were amended to reflect its
       adoption.

   Changes to Existing Documentation
       We have attempted to update the documentation to reflect the changes
       listed in this document.  If you find any we have missed, open an issue
       at <https://github.com/Perl/perl5/issues>.

       Additionally, the following selected changes have been made:

       •   perlapi, perlguts, perlxs, and perlxstut now prefer "SvPVbyte" over
           "SvPV".

       •   References to Pumpking have been replaced with a more accurate term
           or Steering Council where appropriate.

       •   The Perl Steering Council is now the fallback contact for security
           issues.

       perlapi

       •   Efforts continue in improving the presentation of this document, and
           to document more API elements.

       perlcommunity

       •   The freenode IRC URL has been updated.

       perldebguts

       •   Corrected the description of the scalar "${"_<$filename"}" variables.

       perldiag

       •   Now documents additional examples of "not imported" warnings.

       perlfaq

       •   The Perl FAQ was updated to CPAN version 5.20201107 with minor
           improvements.

       perlfunc

       •   my() and state() now explicitly warn the reader that lexical
           variables should typically not be redeclared within the same scope or
           statement.  [GH #18389 <https://github.com/Perl/perl5/issues/18389>]

       •   The localtime entry has been improved and now also states that the
           result of the function is always in English.

       •   msgsnd() documented a length field included in the packed "MSG"
           parameter to "msgsnd()", but there was no such field.  "MSG" contains
           only the type and the message content.

       •   Better explanation of what happens when "sleep" is called with a zero
           or negative value.

       •   Simplify the "split()" documentation by removing the "join()"s from
           the examples [GH #18676 <https://github.com/Perl/perl5/issues/18676>]

       perlgit

       •   document how to create a remote-tracking branch for every PR

       •   document how to get a PR as a local branch

       perlguts

       •   perlguts now explains in greater detail the need to consult "SvUTF8"
           when calling "SvPV" (or variants). A new "How do I pass a Perl string
           to a C library?" section in the same document discusses when to use
           which style of macro to read an SV's string value.

       •   Corrected "my_rpeep" example in perlguts.

       •   A section has been added on the formatted printing of special sizes.

       perlop

       •   The "<>" and "<<>>" operators are commonly referred to as the diamond
           and double diamond operators respectively, but that wasn't mentioned
           previously in their documentation.

       •   Document range op behavior change.

       perlpacktut

       •   Incorrect variables used in an example have been fixed.

       perlsyn

       •   Document that caller() does not see try{} blocks

       •   A new example shows how a lexical "my" variable can be declared
           during the initialization of a "for" loop.

       perlunifaq

       •   Fix description of what Perl does with unencoded strings

Diagnostics
       The following additions or changes have been made to diagnostic output,
       including warnings and fatal error messages.  For the complete list of
       diagnostic messages, see perldiag.

   New Diagnostics
       New Errors

       •   Bareword filehandle "%s" not allowed under 'no feature
           "bareword_filehandles"'

           This accompanies the new bareword_filehandles feature.

       •   Multidimensional hash lookup is disabled

           This accompanies the new multidimensional feature.

       New Warnings

       •   Wide character in setenv key (encoding to utf8)

           Attempts to put wide characters into environment variable keys via
           %ENV now provoke this warning.

   Changes to Existing Diagnostics
       •   Error %s in expansion of %s

           An error was encountered in handling a user-defined property ("User-
           Defined Character Properties" in perlunicode).  These are programmer
           written subroutines, hence subject to errors that may prevent them
           from compiling or running.

       •   Infinite recursion in user-defined property

           A user-defined property ("User-Defined Character Properties" in
           perlunicode) can depend on the definitions of other user-defined
           properties.  If the chain of dependencies leads back to this
           property, infinite recursion would occur, were it not for the check
           that raised this error.

       •   Timeout waiting for another thread to define \p{%s}

           The first time a user-defined property ("User-Defined Character
           Properties" in perlunicode) is used, its definition is looked up and
           converted into an internal form for more efficient handling in
           subsequent uses.  There could be a race if two or more threads tried
           to do this processing nearly simultaneously.

       •   Unknown user-defined property name \p{%s}

           You specified to use a property within the "\p{...}" which was a
           syntactically valid user-defined property, but no definition was
           found for it

       •   Too few arguments for subroutine '%s' (got %d; expected %d)

           Subroutine argument-count mismatch errors now include the number of
           given and expected arguments.

       •   Too many arguments for subroutine '%s' (got %d; expected %d)

           Subroutine argument-count mismatch errors now include the number of
           given and expected arguments.

       •   Lost precision when %s %f by 1

           This warning was only issued for positive too-large values when
           incrementing, and only for negative ones when decrementing.  It is
           now issued for both positive or negative too-large values.  [GH
           #18333 <https://github.com/Perl/perl5/issues/18333>]

       •   \K not permitted in lookahead/lookbehind in regex; marked by <-- HERE
           in m/%s/

           This error was incorrectly produced in some cases involving nested
           lookarounds.  This has been fixed.  [GH #18123
           <https://github.com/Perl/perl5/issues/18123>]

       •   Use of uninitialized value%s

           This warning may now include the array or hash index when the
           uninitialized value is the result of an element not found.  This will
           only happen if the index is a simple non-magical variable.

Utility Changes
   perl5db.pl (the debugger)
       •   New option: "HistItemMinLength"

           This option controls the minimum length a command must be to get
           stored in history.  Traditionally, this has been fixed at 2.  Changes
           to the debugger are often perilous, and new bugs should be reported
           so the debugger can be debugged.

       •   Fix to "i" and "l" commands

           The "i $var" and "l $var" commands work again with lexical variables.

Configuration and Compilation
       •   Prevented incpath to spill into libpth

       •   Use realpath if available. (This might catch more duplicate paths.)

       •   Only include real existing paths.

       •   Filter inc paths out of libpth.

       •   stadtx hash support has been removed

           stadtx support has been entirely removed.  Previously, it could be
           requested with "PERL_HASH_FUNC_STADTX", and was default in 64-bit
           builds.  It has been replaced with SipHash.  SipHash has been more
           rigorously reviewed than stadtx.

       •   Configure

           A new probe checks for buggy libc implementations of the
           "gcvt"/"qgcvt" functions.  [GH #18170
           <https://github.com/Perl/perl5/issues/18170>]

       •   "-Dusedefaultstrict"

           Perl can now be built with strict on by default (using the
           configuration option "-Dusedefaultstrict".

           These strict defaults do not apply when "perl" is run via "-e" or
           "-E".

           This setting provides a diagnostic mechanism intended for development
           purposes only and is thus undefined by default.

       •   The minimum supported Bison version is now 2.4, and the maximum is
           3.7.

       •   Newer 64-bit versions of the Intel C/C++ compiler are now recognised
           and have the correct flags set.

       •   We now trap SIGBUS when Configure checks for "va_copy".

           On several systems the attempt to determine if we need "va_copy" or
           similar results in a SIGBUS instead of the expected SIGSEGV, which
           previously caused a core dump.

           [GH #18148 <https://github.com/Perl/perl5/issues/18148>]

Testing
       Tests were added and changed to reflect the other additions and changes
       in this release.  Furthermore, these significant changes were made:

       •   Split Config-dependent tests in t/opbasic/arith.t to t/op/arith2.t

       •   t/re/opt.t was added, providing a test harness for regexp
           optimization.  [GH #18213 <https://github.com/Perl/perl5/pull/18213>]

       •   A workaround for CPAN distributions needing dot in @INC has been
           removed [GH #18394 <https://github.com/Perl/perl5/pull/18394>].  All
           distributions that previously required the workaround have now been
           adapted.

       •   When testing in parallel on many-core platforms, you can now cause
           the test suite to finish somewhat earlier, but with less logical
           ordering of the tests, by setting

            PERL_TEST_HARNESS_ASAP=1

           while running the test suite.

Platform Support
   New Platforms
       9front
           Allow building Perl on i386 9front systems (a fork of plan9).

   Updated Platforms
       Plan9
           Improve support for Plan9 on i386 platforms.

       MacOS (Darwin)
           The hints file for darwin has been updated to handle future MacOS
           versions beyond 10. [GH #17946
           <https://github.com/Perl/perl5/issues/17946>]

   Discontinued Platforms
       Symbian
           Support code relating to Symbian has been removed.  Symbian was an
           operating system for mobile devices.  The port was last updated in
           July 2009, and the platform itself in October 2012.

   Platform-Specific Notes
       DragonFlyBSD
           Tests were updated to workaround DragonFlyBSD bugs in tc*() functions
           <https://bugs.dragonflybsd.org/issues/3252> and ctime updates
           <https://bugs.dragonflybsd.org/issues/3251>.

       Mac OS X
           A number of system libraries no longer exist as actual files on Big
           Sur, even though "dlopen" will pretend they do, so now we fall back
           to "dlopen" if a library file can not be found.  [GH #18407
           <https://github.com/Perl/perl5/issues/18407>]

       Windows
           Reading non-ASCII characters from the console when its codepage was
           set to 65001 (UTF-8) was broken due to a bug in Windows. A workaround
           for this problem has been implemented.  [GH #18701
           <https://github.com/Perl/perl5/issues/18701>]

           Building with mingw.org compilers (version 3.4.5 or later) using
           mingw runtime versions < 3.22 now works again.  This was broken in
           Perl 5.31.4.

           Building with mingw.org compilers (version 3.4.5 or later) using
           mingw runtime versions >= 3.21 now works (for compilers up to version
           5.3.0).

           Makefile.mk, and thus support for dmake, has been removed. It is
           still possible to build Perl on Windows using nmake (Makefile) and
           GNU make (GNUmakefile).  [GH #18511
           <https://github.com/Perl/perl5/pull/18511>]

           perl can now be built with "USE_QUADMATH" on MS Windows using (32-bit
           and 64-bit) mingw-w64 ports of gcc.  [GH #18465
           <https://github.com/Perl/perl5/pull/18465>]

           The pl2bat.pl utility now needs to "use ExtUtils::PL2Bat". This could
           cause failures in parallel builds.

           Windows now supports symlink() and readlink(), and lstat() is no
           longer an alias for stat().  [GH #18005
           <https://github.com/Perl/perl5/issues/18005>].

           Unlike POSIX systems, creating a symbolic link on Windows requires
           either elevated privileges or Windows 10 1703 or later with Developer
           Mode enabled.

           stat(), including "stat FILEHANDLE", and lstat() now uses our own
           implementation that populates the device "dev" and inode numbers
           "ino" returned rather than always returning zero.  The number of
           links "nlink" field is now always populated.

           "${^WIN32_SLOPPY_STAT}"  previously controlled whether the "nlink"
           field was populated requiring a separate Windows API call to fetch,
           since "nlink" and the other information required for "stat()" is now
           retrieved in a single API call.

           The "-r" and "-w" operators now return true for the "STDIN", "STDOUT"
           and "STDERR" handles.  Unfortunately it still won't return true for
           duplicates of those handles.  [GH #8502
           <https://github.com/Perl/perl5/issues/8502>].

           The times returned by stat() and lstat() are no longer incorrect
           across Daylight Savings Time adjustments.  [GH #6080
           <https://github.com/Perl/perl5/issues/6080>].

           "-x" on a filehandle should now match "-x" on the corresponding
           filename on Vista or later.  [GH #4145
           <https://github.com/Perl/perl5/issues/4145>].

           "-e '"'" no longer incorrectly returns true.  [GH #12431
           <https://github.com/Perl/perl5/issues/12431>].

           The same manifest is now used for Visual C++ and gcc builds.

           Previously, MSVC builds were using the /manifestdependency flag
           instead of embedding perlexe.manifest, which caused issues such as
           "GetVersionEx()" returning the wrong version number on Windows 10.

       z/OS
           The locale categories "LC_SYNTAX" and "LC_TOD" are now recognized.
           Perl doesn't do anything with these, except it now allows you to
           specify them.  They are included in "LC_ALL".

Internal Changes
       •   Corrected handling of double and long double parameters for perl's
           implementation of formatted output for "-Dusequadmath" builds.

           This applies to "PerlIO_printf()", "croak()", "warn()", "sv_catpvf()"
           and their variants.

           Previously in "quadmath" builds, code like:

             PerlIO_printf(PerlIO_stderr(), "%g", somedouble);

           or

             PerlIO_printf(PerlIO_stderr(), "%Lg", somelongdouble);

           would erroneously throw an exception "panic: quadmath invalid format
           ...", since the code added for quadmath builds assumed "NV"s were the
           only floating point format passed into these functions.

           This code would also process the standard C long double specifier "L"
           as if it expected an "NV" ("__float128" for quadmath builds),
           resulting in undefined behaviour.

           These functions now correctly accept doubles, long doubles and NVs.

       •   Previously the right operand of bitwise shift operators (shift
           amount) was implicitly cast from IV to int, but it might lead wrong
           results if IV does not fit in int.

           And also, shifting INT_MIN bits used to yield the shiftee unchanged
           (treated as 0-bit shift instead of negative shift).

       •   A set of "cop_hints_exists_{pv,pvn,pvs,sv}" functions was added, to
           support checking for the existence of keys in the hints hash of a
           specific cop without needing to create a mortal copy of said value.

       •   An aid has been added for using the "DEBUG" macros when debugging XS
           or C code. The comments in perl.h describe "DEBUG_PRE_STMTS" and
           "DEBUG_POST_STMTS". which you can "#define" to do things like save
           and restore "errno", in case the "DEBUG" calls are interfering with
           that, or to display timestamps, or which thread it's coming from, or
           the location of the call, or whatever.  You can make a quick hack to
           help you track something down without having to edit individual
           "DEBUG" calls.

       •   Make "REFCOUNTED_HE_EXISTS" available outside of core

       •   All "SvTRUE"-ish functions now evaluate their arguments exactly once.
           In 5.32, plain ""SvTRUE"" in perlapi was changed to do that; now the
           rest do as well.

       •   Unicode is now a first class citizen when considering the pattern
           /A*B/ where A and B are arbitrary.  The pattern matching code tries
           to make a tight loop to match the span of A's.  The logic of this was
           now really updated with support for UTF-8.

       •   The re module has a new function "optimization", which can return a
           hashref of optimization data discovered about a compiled regexp.

       •   The "PERL_GLOBAL_STRUCT" compilation option has been removed, and
           with it the need or the "dVAR" macro.  "dVAR" remains defined as a
           no-op outside "PERL_CORE" for backwards compatiblity with XS modules.

       •   A new savestack type "SAVEt_HINTS_HH" has been added, which neatens
           the previous behaviour of "SAVEt_HINTS".  On previous versions the
           types and values pushed to the save stack would depend on whether the
           hints included the "HINT_LOCALIZE_HH" bit, which complicates external
           code that inspects the save stack. The new version uses a different
           savestack type to indicate the difference.

       •   A new API function "av_count" in perlapi has been added which gives a
           clearly named way to find how many elements are in an array.

Selected Bug Fixes
       •   Setting %ENV now properly handles upgraded strings in the key.
           Previously Perl sent the SV's internal PV directly to the OS; now it
           will handle keys as it has handled values since 5.18: attempt to
           downgrade the string first; if that fails then warn and use the utf8
           form.

       •   Fix a memory leak in regcomp.c [GH #18604
           <https://github.com/Perl/perl5/issues/18604>]

       •   pack/unpack format 'D' now works on all systems that could support it

           Previously if "NV == long double", now it is supported on all
           platforms that have long doubles. In particular that means it is now
           also supported on quadmath platforms.

       •   Skip trying to constant fold an incomplete op tree [GH #18380
           <https://github.com/Perl/perl5/issues/18380>]

           Constant folding of chained comparison op trees could fail under
           certain conditions, causing perl to crash. As a quick fix, constant
           folding is now skipped for such op trees. This also addresses [GH
           #17917 <https://github.com/Perl/perl5/issues/17917>].

       •   %g formatting broken on Ubuntu-18.04, "NVSIZE == 8" [GH #18170
           <https://github.com/Perl/perl5/issues/18170>]

           Buggy libc implementations of the "gcvt" and "qgcvt" functions caused
           "(s)printf" to incorrectly truncate %g formatted numbers.  A new
           Configure probe now checks for this, with the result that the libc
           "sprintf" will be used in place of "gcvt" and "qgcvt".

           Tests added as part of this fix also revealed related problems in
           some Windows builds. The makefiles for MINGW builds on Windows have
           thus been adjusted to use "USE_MINGW_ANSI_STDIO" by default, ensuring
           that they also provide correct "(s)printf" formatting of numbers.

       •   op.c: croak on "my $_" when "use utf8" is in effect [GH #18449
           <https://github.com/Perl/perl5/issues/18449>]

           The lexical topic feature experiment was removed in Perl v5.24 and
           declaring "my $_" became a compile time error. However, it was
           previously still possible to make this declaration if "use utf8" was
           in effect.

       •   regexec.c: Fix assertion failure [GH #18451
           <https://github.com/Perl/perl5/issues/18451>]

           Fuzzing triggered an assertion failure in the regexp engine when too
           many characters were copied into a buffer.

       •   semctl(), msgctl(), and shmctl() now properly reset the UTF-8 flag on
           the "ARG" parameter if it's modified for "IPC_STAT" or "GETALL"
           operations.

       •   "semctl()", "msgctl()", and "shmctl()" now attempt to downgrade the
           "ARG" parameter if its value is being used as input to "IPC_SET" or
           "SETALL" calls.  A failed downgrade will thrown an exception.

       •   In cases where "semctl()", "msgctl()" or "shmctl()" would treat the
           "ARG" parameter as a pointer, an undefined value no longer generates
           a warning.  In most such calls the pointer isn't used anyway and this
           allows you to supply "undef" for a value not used by the underlying
           function.

       •   semop() now downgrades the "OPSTRING" parameter, msgsnd() now
           downgrades the "MSG" parameter and shmwrite now downgrades the
           "STRING" parameter to treat them as bytes.  Previously they would be
           left upgraded, providing a corrupted structure to the underlying
           function call.

       •   msgrcv() now properly resets the UTF-8 flag the "VAR" parameter when
           it is modified.  Previously the UTF-8 flag could be left on,
           resulting in a possibly corrupt result in "VAR".

       •   Magic is now called correctly for stacked file test operators.  [GH
           #18293 <https://github.com/Perl/perl5/issues/18293>]

       •   The "@ary = split(...)" optimization no longer switches in the target
           array as the value stack.  [GH #18232
           <https://github.com/Perl/perl5/issues/18232>] Also see discussion at
           <https://github.com/Perl/perl5/pull/18014#issuecomment-671299506>.

       •   Fixed a bug in which some regexps with recursive subpatterns matched
           incorrectly.

           [GH #18096 <https://github.com/Perl/perl5/issues/18096>]

       •   On Win32, "waitpid(-1, WNOHANG)" could sometimes have a very large
           timeout.  [GH #16529 <https://github.com/Perl/perl5/issues/16529>]

       •   "MARK" and hence "items" are now correctly initialized in "BOOT"
           XSUBs.

       •   Some list assignments involving "undef" on the left-hand side were
           over-optimized and produced incorrect results.  [GH #16685
           <https://github.com/Perl/perl5/issues/16685>], [GH #17816
           <https://github.com/Perl/perl5/issues/17816>]

Known Problems
       None

Errata From Previous Releases
       None

Obituary
       Kent Fredric (KENTNL) passed away in February 2021.  A native of New
       Zealand and a self-described "huge geek," Kent was the author or
       maintainer of 178 CPAN distributions, the Perl maintainer for the Gentoo
       Linux distribution and a contributor to the Perl core distribution.  He
       is mourned by his family, friends and open source software communities
       worldwide.

Acknowledgements
       Perl 5.34.0 represents approximately 11 months of development since Perl
       5.32.0 and contains approximately 280,000 lines of changes across 2,100
       files from 78 authors.

       Excluding auto-generated files, documentation and release tools, there
       were approximately 150,000 lines of changes to 1,300 .pm, .t, .c and .h
       files.

       Perl continues to flourish into its fourth decade thanks to a vibrant
       community of users and developers. The following people are known to have
       contributed the improvements that became Perl 5.34.0:

       Aaron Crane, Adam Hartley, Andy Dougherty, Ben Cornett, Branislav
       Zahradnik, brian d foy, Chris 'BinGOs' Williams, Christian Walde
       (Mithaldu), Craig A. Berry, Dagfinn Ilmari Mannsaaker, Dan Book, Daniel
       Boehmer, Daniel Lauegt, Dan Kogai, David Cantrell, David Mitchell,
       Dominic Hamon, E. Choroba, Ed J, Eric Herman, Eric Lindblad, Eugene Alvin
       Villar, Felipe Gasper, Giovanni Tataranni, Graham Knop, Graham Ollis,
       Hauke D, H.Merijn Brand, Hugo van der Sanden, Ichinose Shogo, Ivan
       Baidakou, Jae Bradley, James E Keenan, Jason McIntosh, jkahrman, John
       Karr, John Lightsey, Kang-min Liu, Karen Etheridge, Karl Williamson,
       Keith Thompson, Leon Timmermans, Marc Reisner, Marcus Holland-Moritz, Max
       Maischein, Michael G Schwern, Nicholas Clark, Nicolas R., Paul Evans,
       Petr PisaX, raiph, Renee Baecker, Ricardo Signes, Richard Leach, Romano,
       Ryan Voots, Samanta Navarro, Samuel Thibault, Sawyer X, Scott Baker,
       Sergey Poznyakoff, Sevan Janiyan, Shirakata Kentaro, Shlomi Fish,
       Sisyphus, Sizhe Zhao, Steve Hay, TAKAI Kousuke, Thibault Duponchelle,
       Todd Rinaldo, Tomasz Konojacki, Tom Hukins, Tom Stellard, Tony Cook,
       vividsnow, Yves Orton, Zakariyya Mughal, XXXXXX XXXXXXXX.

       The list above is almost certainly incomplete as it is automatically
       generated from version control history. In particular, it does not
       include the names of the (very much appreciated) contributors who
       reported issues to the Perl bug tracker.

       Many of the changes included in this version originated in the CPAN
       modules included in Perl's core. We're grateful to the entire CPAN
       community for helping Perl to flourish.

       For a more complete list of all of Perl's historical contributors, please
       see the AUTHORS file in the Perl source distribution.

Reporting Bugs
       If you find what you think is a bug, you might check the perl bug
       database at <https://github.com/Perl/perl5/issues>.  There may also be
       information at <http://www.perl.org/>, the Perl Home Page.

       If you believe you have an unreported bug, please open an issue at
       <https://github.com/Perl/perl5/issues>.  Be sure to trim your bug down to
       a tiny but sufficient test case.

       If the bug you are reporting has security implications which make it
       inappropriate to send to a public issue tracker, then see "SECURITY
       VULNERABILITY CONTACT INFORMATION" in perlsec for details of how to
       report the issue.

Give Thanks
       If you wish to thank the Perl 5 Porters for the work we had done in Perl
       5, you can do so by running the "perlthanks" program:

           perlthanks

       This will send an email to the Perl 5 Porters list with your show of
       thanks.

SEE ALSO
       The Changes file for an explanation of how to view exhaustive details on
       what changed.

       The INSTALL file for how to build Perl.

       The README file for general stuff.

       The Artistic and Copying files for copyright information.



